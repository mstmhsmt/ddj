
DEFINE input:inference "ont.cpi"

PREFIX fb:   <http://codinuum.com/fb/>
PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


SELECT DISTINCT ?meth ?meth_
?e0 ?SuperC_ ?SuperCname_
?C0x ?C0x_ ?C0name
(?mname_ AS ?movedMethodName)
(?SuperC_ AS ?extractedSuperclass)
(?e0 AS ?originalContext)
(?C0x AS ?originalClass)
(?C0x_ AS ?modifiedClass)
(?C0name AS ?className)
(?SuperCname_ AS ?superclassName)
(?SuperCname_ AS ?GROUP)
WHERE {

  {
    SELECT DISTINCT ?ver ?ver_ ?SuperC_ ?SuperCname_ ?e0 (COUNT(DISTINCT ?C0) AS ?n)
    WHERE {

      {
        SELECT DISTINCT ?SuperC_ ?SuperCname_ ?e0
        WHERE {

          ?SuperC_ a java:ClassDeclaration ;
                   java:fullyQualifiedName ?SuperCname_ ;
                   chg:insertedOrGrafted ?e0 .

        } GROUP BY ?SuperC_ ?SuperCname_ ?e0
      }

      ?e0 src:parent*/ver:version ?ver .

      ?SuperC_ ver:version ?ver_ .

      ?ver ver:next ?ver_ .

      ?C0 a java:ClassDeclaration ;
          chg:mappedTo ?C0_ .

      ?C0_ a java:ClassDeclaration ;
           java:subClassOf ?SuperC_ .

      FILTER EXISTS {
        ?C0 ver:version ?ver .
        ?C0_ ver:version ?ver_ .
      }

    } GROUP BY ?ver ?ver_ ?SuperC_ ?SuperCname_ ?e0
  }

  FILTER (?n = 1)

  {
    SELECT DISTINCT ?SuperC_ ?C0x ?C0x_ ?C0name
    WHERE {
      ?C0x a java:ClassDeclaration ;
           java:name ?C0name ;
           chg:mappedTo ?C0x_ .

      ?C0x_ a java:ClassDeclaration ;
            java:subClassOf ?SuperC_ .

    } GROUP BY ?SuperC_ ?C0x ?C0x_ ?C0name
  }

  ?C0x ver:version ?ver .
  ?C0x_ ver:version ?ver_ .

}
