
DEFINE input:inference "ont.cpi"

PREFIX fb:   <http://codinuum.com/fb/>
PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


SELECT DISTINCT ?vdtor0 ?vdtor0_ ?e1 ?e0_ ?fname0 ?cname0 ?cname1_
(?vdtor0 AS ?originalField) (?vdtor0_ AS ?movedField)
(?e1 AS ?originalContext) (?e0_ AS ?modifiedContext)
(?class0 AS ?originalClass)
(?class0_ AS ?modifiedClass)
(?class1_ AS ?subclass)
(?fname0 AS ?fieldName)
(?cname1_ AS ?subclassName)
(?cname0 AS ?className)
(?className AS ?GROUP)
WHERE {


  {
    SELECT DISTINCT ?field0 ?fname0 ?vdtor0 ?e0_ ?class0 ?class0_ ?cname0
    WHERE {
      
      ?vdtor0 a java:VariableDeclarator ;
              src:parent ?field0 ;
              java:name ?fname0 ;
              chg:removal ?e0_ .

      ?field0 a java:FieldDeclaration ;
              java:inTypeDeclaration ?class0 .

      ?class0 a java:TypeDeclaration ;
              java:name ?cname0 ;
              chg:mappedTo ?class0_ .

      ?class0_ a java:TypeDeclaration .

    } GROUP BY ?field0 ?vdtor0 ?fname0 ?e0_ ?class0 ?class0_ ?cname0
  }

  {
    SELECT DISTINCT ?class1_ ?field0_ ?vdtor0_ ?fname0 ?e1 ?cname1_
    WHERE {

      ?vdtor0_ a java:VariableDeclarator ;
               src:parent ?field0_ ;
               java:name ?fname0 ;
               chg:addition ?e1 .

      ?field0_ a java:FieldDeclaration ;
               java:inTypeDeclaration ?class1_ .
      
      ?class1_ a java:TypeDeclaration ;
               java:name ?cname1_ .

    } GROUP BY ?class1_ ?field0_ ?vdtor0_ ?fname0 ?e1 ?cname1_
  }

  ?class1_ java:subTypeOf+ ?class0_ .

  FILTER EXISTS {
    ?e1 src:parent*/ver:version ?ver .
    ?class1_ ver:version ?ver_ .
    ?e0_ src:parent*/ver:version ?ver_ .
    ?class0 ver:version ?ver .
    ?class0_ ver:version ?ver_ .

    ?ver ver:next ?ver_ .
  }

}

