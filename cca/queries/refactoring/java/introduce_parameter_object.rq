
DEFINE input:inference "ont.cpi"

PREFIX fb:   <http://codinuum.com/fb/>
PREFIX ent:  <http://codinuum.com/fact/entity/>
PREFIX rel:  <http://codinuum.com/fact/version/release/>
PREFIX ext:  <http://codinuum.com/fact/external/>
PREFIX src:  <http://codinuum.com/ontologies/2012/10/source-code-entity#>
PREFIX ver:  <http://codinuum.com/ontologies/2012/10/versioning#>
PREFIX chg:  <http://codinuum.com/ontologies/2012/10/primitive-change#>
PREFIX java: <http://codinuum.com/ontologies/2012/10/java-entity#>
PREFIX c:    <http://codinuum.com/ontologies/2012/10/c-entity#>


SELECT DISTINCT
?meth_or_ctor ?meth_or_ctor_ ?mname ?cname_ ?param_ ?pnames
(?meth_or_ctor AS ?originalMethod)
(?meth_or_ctor_ AS ?modifiedMethod)
(?mname AS ?methodName)
(?pnames AS ?parameterNames)
(?cname_ AS ?parameterClassName)
(?mname AS ?GROUP)
WHERE {


  {
    SELECT DISTINCT ?params ?mname ?meth_or_ctor ?meth_or_ctor_ ?cname_ ?param_
    (COUNT(DISTINCT ?param0) AS ?np) 
    (GROUP_CONCAT(DISTINCT ?pname0; SEPARATOR=";") AS ?pnames)
    WHERE {

      {
        SELECT DISTINCT ?params ?meth_or_ctor ?meth_or_ctor_ ?mname ?cname_ ?ty0 ?cat_ty0 ?param0 ?pname0 ?param_ ?e0_ ?e3
        WHERE {

          {
            SELECT DISTINCT ?params ?meth_or_ctor ?ty0 ?cat_ty0 ?param0 ?pname0 ?e0_
            WHERE {

              ?ty0 a java:Type ;
                   a ?cat_ty0 OPTION (INFERENCE NONE) ;
                   src:parent ?param0 .

              ?param0 a java:Parameter ;
                      src:parent ?params ;
                      java:name ?pname0 ;
                      chg:removal ?e0_ .

              ?params a java:Parameters ;
                      java:inMethodOrConstructor ?meth_or_ctor .

            } GROUP BY ?params ?meth_or_ctor ?ty0 ?cat_ty0 ?param0 ?pname0 ?e0_
          }

          ?meth_or_ctor a java:MethodOrConstructor ;
                        java:name ?mname ;
                        chg:mappedTo ?meth_or_ctor_ .

          ?meth_or_ctor_ a java:MethodOrConstructor .

          {
            SELECT DISTINCT ?meth_or_ctor_ ?param_ ?cname_ ?e3
            WHERE {

              ?ty_ a java:ReferenceType ;
                   src:parent ?param_ ;
                   java:name ?cname_ .

              ?param_ a java:Parameter ;
                      src:parent ?params_ ;
                      chg:addition ?e3 .

              ?params_ a java:Parameters ;
                       java:inMethodOrConstructor ?meth_or_ctor_ .

            } GROUP BY ?meth_or_ctor_ ?param_ ?cname_ ?e3
          }

        } GROUP BY ?params ?meth_or_ctor ?meth_or_ctor_ ?mname ?cname_ ?ty0 ?cat_ty0 ?param0 ?pname0 ?param_ ?e0_ ?e3
      }

      ?e0_ src:parent*/ver:version ?ver_ .
      ?e3 src:parent*/ver:version ?ver .

      ?ver ver:next ?ver_ .      

      FILTER EXISTS {

        ?field0_ a java:FieldDeclaration ;
                 java:inClass ?class_ .
        
        ?class_ a java:ClassDeclaration ;
                java:fullyQualifiedName ?cname_ ;
                chg:insertedOrGrafted ?e2 .

        ?e2 src:parent*/ver:version ?ver .

        FILTER (EXISTS {
          ?fty0_ a java:PrimitiveType ;
                 src:parent ?field0_ ;
                 a ?cat_ty0 OPTION (INFERENCE NONE) .
        } || EXISTS {
          ?ty0 a java:ReferenceType ;
               java:name ?name_ty0 .
          ?fty0_ java:name ?name_ty0 ;
                 src:parent ?field0_ .
        })
        
      }

    } GROUP BY ?params ?mname ?meth_or_ctor ?meth_or_ctor_ ?cname_ ?param_
  }

  FILTER (?np > 1)

}

